version: 2.1
orbs:
  node: circleci/node@1.1.6
jobs:
  build:
    executor:
      name: node/default
    steps:
      - checkout
      - run: npm install
  ui-test:
    executor:
      name: node/default
    steps:
      - checkout
      - run: echo "UI Testing Successful"
  api-test:
    executor:
      name: node/default
    steps:
      - checkout
      - run: echo "API Testing Successful"
  security-test:
    executor:
      name: node/default
    steps:
      - checkout
      - run: echo "ZAP Security Testing Successful"
  deploy:
    executor:
     name: node/default
    steps:
      - checkout
      - run: echo "Ready for deploy"
workflows:
  eurobase_cy_bdd_test:
    jobs:
      - build
      - ui-test: 
         requires:
            - build
      - api-test: 
         requires:
            - build
      - security-test: 
         requires:
            - ui-test
            - api-test
      - deploy: 
         requires:
            - security-test
          


# working ci configuration for seresse execution
# version: 2.1
# orbs:
#   node: circleci/node@1.1.6
# jobs:
#   build-and-test:
#     executor:
#       name: node/default
#     steps:
#       - checkout
#       - node/with-cache:
#           steps:
#             - run: npm install
#             - run: npm test
# workflows:
#     eurobase-cy-bdd-test:
#       jobs:
#         - build-and-test



# version: 2
# jobs:
#    build:
#      docker:
#        - image: circleci/ruby:2.4.1
#        - image: circleci/node:10.16.3
#      working_directory: ~/repo
#      steps:
#        - checkout
#        - restore_cache:
#           key: dependency-cache-{{ checksum "package-lock.json" }}
#        - run: 
#           shell: /bin/sh
#           command: npm install
#        - save_cache: # special step to save the dependency cache
#           key: dependency-cache-{{ checksum "package-lock.json" }}
#           paths:
#             - ./node_modules
#        - run: 
#           shell: /bin/sh
#           command: './node_modules/.bin/cypress run'
            
            
